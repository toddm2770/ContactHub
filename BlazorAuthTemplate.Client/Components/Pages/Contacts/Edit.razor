@page "/contacts/edit/{id:int}"
@attribute [Authorize]
@rendermode InteractiveServer
@inject IContactService ContactService
@inject NavigationManager Nav



<PageTitle>Edit Contact</PageTitle>

<div class="container p-3 my-3 border border-2 shadow bg-light">
	@if(contact is not null)
	{
		<ContactForm Contact="contact" OnSubmit="HandleSubmit" />
	}
</div>



@code {
	[Parameter]
	public int Id { get; set; }

	[CascadingParameter]
	private Task<AuthenticationState>? AuthStateTask { get; set; }

	private UserInfo? userInfo;

	private ContactDTO? contact;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
			contact = await ContactService.GetContactByIdAsync(Id, userInfo!.UserId);
		}
		catch(Exception ex)
		{
			Console.WriteLine(ex);
		}

		if (contact is null)
		{
			Nav.NavigateTo("/contacts");
		}
	}

	private async Task HandleSubmit(ContactDTO contact)
	{
		await ContactService.UpdateContactAsync(contact, userInfo!.UserId);
		Nav.NavigateTo("/contacts");
	}
}
