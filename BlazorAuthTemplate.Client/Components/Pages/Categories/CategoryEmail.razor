@page "/categories/email/{categoryId:int}"
@rendermode InteractiveAuto
@attribute [Authorize]

@inject ICategoryService CategoryService
@inject NavigationManager Nav

<PageTitle>ContactPro | Email Category</PageTitle>

<div class="card shadow-lg my-3">
    <div class="card-body">
        @if (emailData is not null)
        {
            <EmailForm EmailData="emailData" OnSubmit="HandleSubmit" />
        }
    </div>
</div>

@code {
    #region parameters
    [Parameter]
    public int CategoryId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }
    #endregion

    #region state
    private EmailData? emailData;
    private UserInfo? userInfo;
    private CategoryDTO? category;
    #endregion

    #region methods
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // get the user ID
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
            // get the category OR get all the category's contacts
            category = await CategoryService.GetCategoryByIdAsync(CategoryId, userInfo!.UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        // set emailData to have the category's contacts' emails
        if (category is null)
        {
            Nav.NavigateTo("categories");
        }
        else
        {
            emailData = new EmailData()
                {
                    Recipients = string.Join("; ", category.Contacts.Select(c => c.Email!)),
                    Subject = $"Group Message for {category.Name}"
                };
        }

    }

    private async Task HandleSubmit(EmailData formEmailData)
    {
        string message = $"Something went wrong sending your email to the {category?.Name} category. Please try again later.";

        try
        {
            bool success = await CategoryService.EmailCategoryAsync(CategoryId, formEmailData, userInfo!.UserId);

            if (success)
            {
                message = $"Email successfully sent to your {category?.Name} category!";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        Nav.NavigateTo($"contacts?message={message}");
    }
    #endregion

}

